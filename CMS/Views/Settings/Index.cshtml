@using CMS
@using Mentis.AlRassoul.Core.Domain.Configuration
@{
    var area = Site.EnableArea ? "/admin" : "";
}
<div class="row">
    <div class="col-md-12">
        <h3 class="page-title" data-url="@Url.Action("Index", "Setting")">
            <small></small>
            Setting
        </h3>
    </div>
</div>
@Html.AlertMessage()
<div class="row">
    <div class="col-md-12">
        <div class="k-rtl">
            @(Html.Kendo().Grid<SettingsController.SettingView>()
                  .Name("grid")
                  .Columns(columns =>
                  {
                      columns.Bound(p => p.Id).Visible(false);
                      columns.Bound(p => p.Name).Filterable(f => f.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)
     .ShowOperators(false).Delay(100)));
                      columns.Bound(p => p.Value).Filterable(f => f.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)
     .ShowOperators(false).Delay(100)));
                      columns.Command(command =>
                      {
                          command.Edit().UpdateText("حفظ").CancelText("إلغاء").Text("تعديل");
                          command.Destroy().Text("حذف");
                      }).Width(300);
                  })
                  .ToolBar(toolbar => toolbar.Create().Text("إضافة جديد"))
                  .Editable(editable => editable.Mode(GridEditMode.InLine))
                  .Pageable(pageable => pageable
                      .Refresh(true) //.Numeric(true).Input(true)
                      .PageSizes(true)
                      .ButtonCount(5))
                  .Sortable()
                  .Scrollable(s => s.Height("auto"))
                  .Filterable(filterable => filterable
                      .Extra(false)
                      .Mode(GridFilterMode.Row	)
                      
                      .Operators(operators => operators
                          .ForString(str => str.Clear()
                                      .Contains("Contains")
                          ))
                  ) 
                  .DataSource(dataSource => dataSource
                      .Ajax()
                      // .Sort(sort => sort.Add("DisplayOrder").Ascending()) //
                      .PageSize(10)
                      .Events(events => events.Error("error_handler"))
                      .Model(model => model.Id(p => p.Id))
                      .Create(update => update.Action("Create", "Settings"))
                      .Read(read => read.Action("List_Read", "Settings"))
                      .Update(update => update.Action("Update", "Settings"))
                      .Destroy(update => update.Action("Destroy", "Settings"))
                  ))
        </div>
    </div>
</div>